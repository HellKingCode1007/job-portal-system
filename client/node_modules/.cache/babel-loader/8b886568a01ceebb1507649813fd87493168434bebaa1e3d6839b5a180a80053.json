{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prabh\\\\Downloads\\\\Job Portal System\\\\client\\\\src\\\\components\\\\auth\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = ({\n  children,\n  allowedRoles = []\n}) => {\n  _s();\n  const {\n    user,\n    isAuthenticated,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isAuthenticated) {\n    // Redirect to login page with return url\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user has required role\n  if (allowedRoles.length > 0 && !allowedRoles.includes(user.role)) {\n    // Redirect to appropriate dashboard based on user role\n    const dashboardPath = user.role === 'candidate' ? '/candidate/dashboard' : user.role === 'employer' ? '/employer/dashboard' : user.role === 'admin' ? '/admin/dashboard' : '/';\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: dashboardPath,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"pvp8inAvQHEb0BVUe3eLqKvyMMQ=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","user","isAuthenticated","loading","location","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","length","includes","role","dashboardPath","_c","$RefreshReg$"],"sources":["C:/Users/prabh/Downloads/Job Portal System/client/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nexport const ProtectedRoute = ({ children, allowedRoles = [] }) => {\r\n  const { user, isAuthenticated, loading } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    // Redirect to login page with return url\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // Check if user has required role\r\n  if (allowedRoles.length > 0 && !allowedRoles.includes(user.role)) {\r\n    // Redirect to appropriate dashboard based on user role\r\n    const dashboardPath = user.role === 'candidate' \r\n      ? '/candidate/dashboard'\r\n      : user.role === 'employer'\r\n      ? '/employer/dashboard'\r\n      : user.role === 'admin'\r\n      ? '/admin/dashboard'\r\n      : '/';\r\n\r\n    return <Navigate to={dashboardPath} replace />;\r\n  }\r\n\r\n  return children;\r\n}; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM;IAAEC,IAAI;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGT,OAAO,CAAC,CAAC;EACpD,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,IAAIU,OAAO,EAAE;IACX,oBACEP,OAAA;MAAKS,SAAS,EAAC,+CAA+C;MAAAP,QAAA,eAC5DF,OAAA;QAAKS,SAAS,EAAC;MAAmE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC;EAEV;EAEA,IAAI,CAACP,eAAe,EAAE;IACpB;IACA,oBAAON,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAER;MAAS,CAAE;MAACS,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAIV,YAAY,CAACe,MAAM,GAAG,CAAC,IAAI,CAACf,YAAY,CAACgB,QAAQ,CAACd,IAAI,CAACe,IAAI,CAAC,EAAE;IAChE;IACA,MAAMC,aAAa,GAAGhB,IAAI,CAACe,IAAI,KAAK,WAAW,GAC3C,sBAAsB,GACtBf,IAAI,CAACe,IAAI,KAAK,UAAU,GACxB,qBAAqB,GACrBf,IAAI,CAACe,IAAI,KAAK,OAAO,GACrB,kBAAkB,GAClB,GAAG;IAEP,oBAAOpB,OAAA,CAACJ,QAAQ;MAACkB,EAAE,EAAEO,aAAc;MAACJ,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;EAEA,OAAOX,QAAQ;AACjB,CAAC;AAACE,EAAA,CAhCWH,cAAc;EAAA,QACkBH,OAAO,EACjCD,WAAW;AAAA;AAAAyB,EAAA,GAFjBrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}